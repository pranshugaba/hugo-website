<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/pretty-feed-v3.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>game-theory by Pranshu Gaba</title><link>https://pranshugaba.com/tags/game-theory/</link><description/><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>pranshu@pranshugaba.com (Pranshu Gaba)</managingEditor><webMaster>pranshu@pranshugaba.com (Pranshu Gaba)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright><lastBuildDate>Thu, 10 Mar 2022 01:19:29 +0530</lastBuildDate><image><url>https://pranshugaba.com/tags/game-theory/icon.png</url></image><atom:link href="https://pranshugaba.com/tags/game-theory/index.xml" rel="self" type="application/rss+xml"/><item><title>Determinacy of Games with Perfect Information</title><link>https://pranshugaba.com/maths/determinacy-of-games-with-perfect-information/</link><pubDate>Wed, 09 Mar 2022 17:30:00 +0530</pubDate><guid>https://pranshugaba.com/maths/determinacy-of-games-with-perfect-information/</guid><description>
<![CDATA[<p>I recently read a 1953 paper on <em>Infinite Games with Perfect Information</em> by Gale and Stewart<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. In this paper, they look at two-player games where both players have perfect information. Given such a game, they ask if one of the players has a winning strategy. That is, does one of the players have a strategy such that they always win, no matter how the other player plays?</p>
<p>In this post, I share some results from the paper that I found interesting. Spoiler alert &mdash; there do exist games in which neither player has a winning strategy.</p>
<aside class="toc">
  <details open>
    <summary>
      <h2 class="toc__heading">Table of Contents</h2>
    </summary>
    <nav id="TableOfContents">
  <ul>
    <li><a href="#overview">Overview</a></li>
    <li><a href="#defining-a-game">Defining a game</a></li>
    <li><a href="#an-infinite-game-that-is-not-determined">An infinite game that is not determined</a></li>
    <li><a href="#a-topology-of-games">A topology of games</a></li>
    <li><a href="#some-examples-of-determined-games">Some examples of determined games</a></li>
    <li><a href="#whats-next">What&rsquo;s next</a></li>
  </ul>
</nav>
  </details>
</aside>
<h2 id="overview">Overview</h2>
<p>In this paper, we only look at two-player turn-based games with perfect information and no chance moves.</p>
<p>That was a mouthful. Let&rsquo;s look at it again, bit by bit.</p>
<ul>
<li><em>two-player:</em> We look at games played by two-players. They may be co-op or versus.</li>
<li><em>turn-based:</em> The game proceeds in discrete steps. We can see the game as a sequence of turns played by the player. It does not necessarily have to alternate between the players. It is possible for the same player to play multiple turns in a row.</li>
<li><em>perfect information:</em> This means that no information is hidden from the players. Both players know the rules and the state of the game at all times. This excludes games like Poker and Battleship.</li>
<li><em>no chance moves:</em> There is no luck involved in the game. The way the game proceeds is completely determined by the initial position and the decisions taken by the players. We rule out games such as Snakes and Ladders, Ludo, and Catan where dice are rolled or cards are drawn.</li>
</ul>
<p>We will look at both finite games and infinite games. Finite games are those that end after finitely many moves, whereas infinite games go on for infinitely many moves. Most games that we play end are finite.
Chess, Checkers, Go, and Connect 4 are some examples of finite games, whereas games of cops and robbers is an example of an infinite game.</p>
<p>We will now formally define a game. We will abstract away the extraneous details and focus on the underlying structure of the games.</p>
<h2 id="defining-a-game">Defining a game</h2>
<p>We think of a game as a set of states and some relation between them. The game begins in an initial state. One of the players plays a turn, and that changes the state of the game to a new state.</p>
<p>A game can be thought of as a set of states $X$. A state (also called position or configuration) contains information about the history of moves that the players have played so far in order to reach the current state.
As a game is played, the game goes through different states.</p>
<p>We partition the set $X$ into two sets: $X_1$ and $X_2$. If the game is in state $x$, and  $x \in X_i$, then it is Player $i$&rsquo;s turn to play next.</p>
<p>In addition to the set of states, we also need a set of rules to describe the rules of the game. The rulese tell us that if the game is in state $x$, then what are the possible next states the game could go to. In order words, theses are the legal moves available to the players.</p>
<p>It will be convenient to represent this information as a directed graph $T$. The vertices of the graph are the states of the game.
Let $x_0$ be the initial state of the game.</p>
<p>For each state $x$, if there is a legal move that move the game to a different state $x'$, then the graph has an directed edge from $x$ to $x'$. The out-neighbours of $x$ are all the states that one is allowed to go to from $x$.
Note that $x_0$ has no in-edges. All other states have exactly one in-edge each.</p>
<p>For each state $x$ that is not the initial state, we denote by $f(x)$ the <em>predecessor state</em> of $x$. That is, if the game is in state $x$, then it must have been in state $f(x)$ in the previous turn. Now, for each state $x$, the inverse $f^{-1}(x)$ denotes the set of states that can be the next-states of $x$.</p>
<p>For each state $x$ in $X$, there is exactly one path from $x_0$ to $x$ in the graph. We can find this path by repeatedly applying $f$ starting from $x$ until we eventually reach $x_0$. Therefore, the graph $T$ is a tree rooted at $x_0$. The notation $T$ now makes sense.</p>



<figure class="inline-svg">
    <?xml version='1.0' encoding='UTF-8'?>
<!-- This file was generated by dvisvgm 2.11.1 -->
<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='182.68782pt' height='139.16434pt' viewBox='-144.00021 -144.00013 182.68782 139.16434'>
<defs>
<path id='g1-49' d='M2.336239-4.435367C2.336239-4.623661 2.322291-4.630635 2.127024-4.630635C1.680697-4.191283 1.046077-4.184309 .760149-4.184309V-3.93325C.927522-3.93325 1.387796-3.93325 1.771357-4.128518V-.571856C1.771357-.341719 1.771357-.251059 1.073973-.251059H.808966V0C.934496-.006974 1.792279-.027895 2.050311-.027895C2.266501-.027895 3.145205-.006974 3.29863 0V-.251059H3.033624C2.336239-.251059 2.336239-.341719 2.336239-.571856V-4.435367Z'/>
<path id='g1-50' d='M3.521793-1.26924H3.284682C3.263761-1.115816 3.194022-.704359 3.103362-.63462C3.047572-.592777 2.510585-.592777 2.412951-.592777H1.129763C1.862017-1.241345 2.106102-1.436613 2.524533-1.764384C3.040598-2.175841 3.521793-2.608219 3.521793-3.270735C3.521793-4.11457 2.782565-4.630635 1.889913-4.630635C1.025156-4.630635 .439352-4.02391 .439352-3.382316C.439352-3.02665 .739228-2.991781 .808966-2.991781C.976339-2.991781 1.17858-3.110336 1.17858-3.361395C1.17858-3.486924 1.129763-3.731009 .767123-3.731009C.983313-4.226152 1.457534-4.379577 1.785305-4.379577C2.48269-4.379577 2.84533-3.835616 2.84533-3.270735C2.84533-2.66401 2.412951-2.182814 2.189788-1.931756L.509091-.27198C.439352-.209215 .439352-.195268 .439352 0H3.312578L3.521793-1.26924Z'/>
<path id='g1-51' d='M1.903861-2.329265C2.447821-2.329265 2.838356-1.952677 2.838356-1.206476C2.838356-.341719 2.336239-.083686 1.931756-.083686C1.652802-.083686 1.039103-.160399 .746202-.571856C1.073973-.585803 1.150685-.81594 1.150685-.962391C1.150685-1.185554 .983313-1.345953 .767123-1.345953C.571856-1.345953 .376588-1.227397 .376588-.941469C.376588-.285928 1.101868 .139477 1.945704 .139477C2.915068 .139477 3.584558-.509091 3.584558-1.206476C3.584558-1.750436 3.138232-2.294396 2.371108-2.454795C3.103362-2.719801 3.368369-3.242839 3.368369-3.668244C3.368369-4.219178 2.733748-4.630635 1.959651-4.630635S.592777-4.254047 .592777-3.696139C.592777-3.459029 .746202-3.326526 .955417-3.326526C1.171606-3.326526 1.311083-3.486924 1.311083-3.682192C1.311083-3.884433 1.171606-4.030884 .955417-4.044832C1.199502-4.351681 1.680697-4.428394 1.93873-4.428394C2.252553-4.428394 2.691905-4.274969 2.691905-3.668244C2.691905-3.375342 2.594271-3.054545 2.412951-2.838356C2.182814-2.57335 1.987547-2.559402 1.638854-2.538481C1.464508-2.524533 1.45056-2.524533 1.415691-2.517559C1.401743-2.517559 1.345953-2.503611 1.345953-2.426899C1.345953-2.329265 1.408717-2.329265 1.527273-2.329265H1.903861Z'/>
<path id='g0-115' d='M3.895392-3.726027C3.616438-3.716065 3.417186-3.496887 3.417186-3.277709C3.417186-3.138232 3.506849-2.988792 3.726027-2.988792S4.184309-3.158157 4.184309-3.5467C4.184309-3.995019 3.755915-4.403487 2.998755-4.403487C1.683686-4.403487 1.315068-3.387298 1.315068-2.948941C1.315068-2.171856 2.052304-2.022416 2.34122-1.96264C2.859278-1.863014 3.377335-1.753425 3.377335-1.205479C3.377335-.946451 3.148194-.109589 1.952677-.109589C1.8132-.109589 1.046077-.109589 .816936-.637609C1.195517-.587796 1.444583-.886675 1.444583-1.165629C1.444583-1.39477 1.285181-1.514321 1.075965-1.514321C.816936-1.514321 .518057-1.305106 .518057-.856787C.518057-.288917 1.085928 .109589 1.942715 .109589C3.556663 .109589 3.945205-1.09589 3.945205-1.544209C3.945205-1.902864 3.755915-2.15193 3.636364-2.271482C3.367372-2.550436 3.078456-2.600249 2.6401-2.689913C2.281445-2.769614 1.882939-2.839352 1.882939-3.287671C1.882939-3.576588 2.122042-4.184309 2.998755-4.184309C3.247821-4.184309 3.745953-4.11457 3.895392-3.726027Z'/>
</defs>
<g id='page1' transform='matrix(2 0 0 2 0 0)'>
    <g class="fg-stroke">
        <path d='M-16.98828-62.265627C-16.98828-67.42188-21.17188-71.60156-26.328126-71.60156C-31.48438-71.60156-35.66406-67.42188-35.66406-62.265627C-35.66406-57.10547-31.48438-52.92578-26.328126-52.92578C-21.17188-52.92578-16.98828-57.10547-16.98828-62.265627Z' stroke='#000' fill='none' stroke-width='.79701'/>
        <path d='M-52.9258-12.1523C-52.9258-17.3125-57.1094-21.4922-62.2656-21.4922C-67.4219-21.4922-71.6016-17.3125-71.6016-12.1523C-71.6016-6.9961-67.4219-2.8164-62.2656-2.8164C-57.1094-2.8164-52.9258-6.9961-52.9258-12.1523Z' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/>
        <path d='M18.9453-12.1523C18.9453-17.3125 14.7656-21.4922 9.6094-21.4922C4.4531-21.4922 .2734-17.3125 .2734-12.1523C.2734-6.9961 4.4531-2.8164 9.6094-2.8164C14.7656-2.8164 18.9453-6.9961 18.9453-12.1523Z' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/>
        <path d='M-32-54.35156L-53.4648-24.4258' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10' class="fg-fill"/>
        <path d='M-55.199207-22.007777L-51.49999-24.468706L-53.578113-24.265583L-54.054675-26.29684Z' stroke='#000' fill='none' stroke-width='.79697' stroke-miterlimit='10' stroke-linejoin='bevel'/>
        <path d='M-20.65234-54.35156L.8086-24.4258' stroke='#000' fill='none' stroke-width='.79701' stroke-miterlimit='10'/>
        <path d='M2.542968-22.007779L1.39844-26.296844L.925779-24.265592L-1.152346-24.468714Z' stroke='#000' fill='none' stroke-width='.79697' stroke-miterlimit='10' stroke-linejoin='bevel'/>
    </g>

    <g class="fg-fill">
        <path d='M-55.199207-22.007777L-51.49999-24.468706L-53.578113-24.265583L-54.054675-26.29684Z'/>
        <path d='M2.542968-22.007779L1.39844-26.296844L.925779-24.265592L-1.152346-24.468714Z'/>
        <g transform='matrix(1 0 0 1 -4.5697 1.3976)'>
        <use x='-26.32745' y='-62.264205' xlink:href='#g0-115'/>
        <use x='-21.657462' y='-60.769824' xlink:href='#g1-49'/>
        </g>
        <g transform='matrix(1 0 0 1 -40.5069 51.5082)'>
        <use x='-26.32745' y='-62.264205' xlink:href='#g0-115'/>
        <use x='-21.657462' y='-60.769824' xlink:href='#g1-50'/>
        </g>
        <g transform='matrix(1 0 0 1 31.36748 51.5082)'>
        <use x='-26.32745' y='-62.264205' xlink:href='#g0-115'/>
        <use x='-21.657462' y='-60.769824' xlink:href='#g1-51'/>
        </g>
    </g>
</g>
</svg>
    
    <figcaption>An example of a rooted tree.</figcaption>
    
</figure>
<p>The game begins at the root, and the player whose turn it is to play picks a neighbour to move the state to.</p>
<p>A <em>play</em> of the game corresponds to a traversal of states in the tree starting from $x_0$.</p>
<p>For example in chess, the state of the game is completely described by the position of the pieces, whether the players have castled, and whose turn it is to play next. Unlike chess, we do not require that both players play alternating turns in our games.</p>
<p>The players have <em>strategies</em> that determine how they would play when it&rsquo;s their turn. A strategy of Player 1 is a function $\sigma \colon X_1 \to X$.</p>
<p>A player has a <em>winning strategy</em> if they can always win irrespective of which strategy the other player employs. It is not possible for both players to have a winning strategy. However, a surprising result is that there exist games where neither of the players has a winning strategy.</p>
<p>An <em>objective</em> for player 1 is a set of plays.</p>
<h2 id="an-infinite-game-that-is-not-determined">An infinite game that is not determined</h2>
<p>The paper shows an example of a infinite game that is not strictly determined. For every strategy $\sigma$ of Player 1, Player 2 has a strategy such that the resulting play is winning for Player 2. Similarly, no matter what strategy Player 2 picks, Player 1 has a strategy such that they win the game. In other words, none of the players have a winning strategy. The game goes as follows:</p>
<h2 id="a-topology-of-games">A topology of games</h2>
<p>We consider a topology generated by <em>cones</em>.</p>
<h2 id="some-examples-of-determined-games">Some examples of determined games</h2>
<p>Games in which the winning objective is an open set are determined.</p>
<h2 id="whats-next">What&rsquo;s next</h2>
<p>If you found this interesting, I recommend that you give the original paper a read. You may also read a follow up paper by Donald Martin<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> where he proves that all Borel games are determined.</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>Gale, David and Stewart, F. M.. &ldquo;13. Infinite Games with Perfect Information&rdquo;. <em>Contributions to the Theory of Games, Volume II</em>, Princeton University Press, 1953, pp. 245-266. <a href="https://doi.org/10.1515/9781400881970-014" target="_blank" rel="noopener">https://doi.org/10.1515/9781400881970-014</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p>Donald A. Martin. Borel determinacy. <em>Annals of Mathematics</em>, 102(2):363–371, 1975.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></description></item></channel></rss>